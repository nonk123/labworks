/*
 * №1. Нахождение экстремальных значений в массиве с использованием указателей.
 *
 * Задан целочисленный массив. Необходимо определить значение его экстремальных
 * элементов и их индексы с использованием доступа к элементам посредством
 * указателей.
 */

#include "common.hpp"

int
main ()
{
  int* array = NULL;
  int len, i, max_val, min_val, max_idx, min_idx;

  /* Правильный вывод кириллицы. */
  fix_locale ();

  do
    {
      cout << "Длина массива (не более 100 элементов): ";
      cin >> len;
    }
  while (len <= 0 || len > 100);

  /* Захват памяти под массив. */
  array = new int[len];

  /* По каким-то причинам память не выделилась. Программа не может продолжать
     свою работу. */
  if (array == NULL)
    {
      cout << "Ошибка захвата памяти" << endl;
      getch ();
      return 1;
    }

  /* Инициализация генератора случайных чисел. */
  randomize ();

  cout << endl << "Заполненный массив:" << endl;

  /* Заполнение и выведение массива. */
  for (i = 0; i < len; i++)
    {
      /* Заполнение случайными числами в диапазоне [-50; 50]. */
      array[i] = random (101) - 50;

      /* Вывод переноса строки каждые 10 элементов. */
      if (i && !(i % 10))
        cout << endl;
      else if (i)
        cout << " ";

      /* Вывод текущего элемента. */
      cout << setw(3) << array[i];
    }

  max_val = min_val = array[0];
  max_idx = min_idx = 0;

  /* Поиск экстремальных значений. */
  for (i = 1; i < len; i++)
    {
      /* Элемент, меньший по значению ранее найденного минимума, и есть минимум
         на данной итерации. */
      if (array[i] < min_val)
        {
          min_val = array[i];
          min_idx = i;
        }

      /* Аналогично с максимумом. */
      if (array[i] > max_val)
        {
          max_val = array[i];
          max_idx = i;
        }
    }

  cout << endl;

  cout << endl << "Значение максимального элемента: " << max_val;
  cout << endl << "Его индекс: " << max_idx << endl;

  cout << endl << "Значение минимального элемента: " << min_val;
  cout << endl << "Его индекс: " << min_idx << endl;

  /* Освобождение ранее захваченной памяти. */
  if (array != NULL)
    {
      delete[] array;
      array = NULL;
    }

  getch ();
  return 0;
}
