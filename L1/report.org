#+TITLE: Hemmus Draftus Nonkus Maximus Gebastellus
#+AUTHOR: Судаков С.А.

# Used for math formula export.
#+OPTIONS: tex:t

* Аннотация

Данная лабораторная работа описывает решение математических и физических
задач на языке программирования Си. Алгоритмы, используемые здесь,
построены исключительно на математических формулах, которые
преобразовывают входные данные в выходные.

* Теоретическая часть

** Этапы создания компьютерных программ

Процесс создания компьютерных программ для решения той или иной задачи
состоит из следующих этапов:

#+BEGIN_SRC ditaa :file tmp/steps.png
  /----------\     /-----------------------\     /----------\     /-----------\     /---------\
  |  Задача  | --> | Математическая модель | --> | Алгоритм | --> | Программа | --> | Решение |
  \----------/     \-----------------------/     \----------/     \-----------/     \---------/
       ^                      ^                       ^                 ^                ^
       |                      |                       |                 |                |
  /----+-----\     /----------+-----------------------+-----------------+----------------+----\
  | Заказчик |     |                              Разработчик                                 |
  \----------/     \--------------------------------------------------------------------------/
#+END_SRC

** Определение алгоритма

Алгоритм A преобразует набор данных D в результат R. Это можно записать
как функцию:

\begin{equation}
A(D) = R
\end{equation}

Для алгоритма, как и для функции, справедливо следующее утверждение:
каждому элементу из множества D соответствует только один элемент
множества R. Схематически это можно изобразить так:

#+BEGIN_SRC ditaa :file tmp/algorithm.png
  /----\     /----\
  |    |     |    |
  | d1 +---->| r1 |
  |    |     |    |
  +----+     +----+
  |    |     |    |
  | d2 +---->|    |
  |    |     |    |
  +----+     | r2 |
  |    |     |    |
  | d3 +---->|    |
  |    |     |    |
  \----/     \----/
#+END_SRC

Существуют три формы записи алгоритма:
1. Естественно-разговорный язык.
2. Блок-схемы, UML-диаграммы.
3. Языки программирования.

Вне зависимости от формы записи алгоритм требует наличие исполнителя
(например, ЭВМ).

Алгоритмы делятся на численные (работающие с числовыми данными) и
логические (с нечисловыми).

** Общие свойства алгоритмов

1. Дискретность. Любой алгоритм - процесс последовательного построения,
   идущий в дискретном времени по определённому предписанию, называемому
   программой.
2. Направленность. Любой алгоритм обязательно останавливается через
   _конечное_ количество шагов, о чём свидетельствует достижение
   результата.
3. Массовость. Любой алгоритм служит для решения целого класса задач,
   причём начальная совокупность величин может выбираться из некоторого
   начального множества.
4. Элементарность шагов. Получение следующей величины из предыдущей
   должно быть простым, локальным, исполнимым.
5. Правильность. Алгоритм должен обеспечивать получение именно того
   результата, который требует постановка задачи.
6. Эффективность. Если для решения поставленной задачи предлагается
   несколько различных алгоритмов, то выбрать предлагается тот, который
   потребует наименьшей памяти или наименьшего времени.

* Постановка задач

1. Необходимо решить треугольник по двум сторонам и углу между ними.
2. Сколько последовательных чисел начиная с 1 нужно сложить, чтобы их
   сумма была равна заданному?
3. Написать программу перевода температуры по Фаренгейту в
   температуру по Цельсию и обратно по формуле:
   \begin{equation}
   t_C = \frac{5}{9} t_F - 32
   \end{equation}
4. Необходимо расчитать координату тела в заданный момент времени при
   условии, что тело брошено с начальной скоростью V_0, под углом \alpha
   к горизонту. Сопротивлением воздуха принебречь.
5. Расстояние S_1 тело преодолело за время t_1, а дальнейшее расстояние
   S_2 - за время t_2. Найти среднюю скорость движения тела на всём
   пути.
6. Пусть известна масса земли \(M = 5.69 \times 10^24 кг\) и её радиус
   \(R = 6.37 \times 10^6 м\). Также известна масса спутника и период
   его обращения вокруг Земли. Необходимо найти высоту орбиты спутника
   за заданный период.
7. Маятник колеблется по закону \(x(t) = a \sin{\omega{}t +
   \phi}\). \omega известна. Известно, что в начальный момент времени
   координата маятника положительна и в k раз меньше амплитуды a. В
   момент t_1 значение x = a_1. Определить закон изменения амплитуды.
8. Мяч бросают без начальной скорости вертикально вниз с высоты h. Он
   долетает до пола и абсолютно упруго отскакивает от него. Определить
   высоту мяча относительно пола в заданный момент времени.

* Практическая часть

Программная реализация каждого из алгоритмов находится в отдельном
проекте Dev-C++, архив с которыми сдаётся вместе с отчётом. Название
проекта соответствует номеру лабораторной работы и задания. Разработчик
данных программ - Судаков С.А.

Характеристики компьютера, на котором были запущены программы:
- Операционная система: Linux 5.4.0-48-generic x86\under{}64.
- ОЗУ: 2 GB, DDR2 (2x512 MB + 1024 MB).
- ЦП: Intel® Pentium D 2.8 GHz, два ядра.
- Видеокарта: GeForce GT 430, 1024 MB.
- Компилятор: g++ 9.3.0.
- Подключена клавиатура и мышь.

При вводе данных с клавиатуры используется следующая схема из материала
лекции:

#+BEGIN_SRC plantuml :file tmp/input.png
(*) --> "Обработать данные"

if "Данные верны" then
  ->[Да] "Обработать данные"
else
  -->[Нет] "Ввод данных"
endif
#+END_SRC

Такое решение обеспечивает отклонение данных, не входящих в
параметрическую зону, и повторный их ввод.

** Решение треугольника по двум сторонам и углу между ними

*** Описание

Входные данные: длины сторон a и b и \angle{}C между ними в
градусах.

Выходные данные: длина стороны c, углы \angle{}A и \angle{}B отдельно в
градусах и в радианах, площадь треугольника \Delta{}ABC и его
периметр. Для ясности заново выводятся длины сторон a и b, а также
\angle{}C в градусах и радианах.

Исключительные ситуации отсутствуют. Производится проверка входных
данных: длины сторон a и b не могут быть меньше или равными нулю, а
\angle{}C не может равняться 0°.

*** Содержание алгоритма

Вводим длины сторон a и b и \angle{}C в градусах так, как описано выше.

Начинаем решение по формулам из текста лекции.

Используем формулу перевода градусов в радианы:

\begin{equation}
\angle{}C_r = \angle{}C_d \times \frac{\pi}{180\degree}
\end{equation}

Подставляем \angle{}C в формулу длины стороны c:

\begin{equation}
c = \sqrt{a^2 + b^2 - 2ab \cos{\angle{}C}
\end{equation}

Вычисляем углы \angle{}A и \angle{}B:

\begin{equation}
\angle{}A = \arccos{\frac{b^2 + c^2 - a^2}{2bc}}
\angle{}B = \arccos{\frac{a^2 + c^2 - b^2}{2ac}}
\end{equation}

Перевод \angle{}A в градусы осуществляется по следующей формуле:

\begin{equation}
\angle{}A_d = \angle{}A_r \times \frac{180\degree}{\pi}
\end{equation}

Аналогично с \angle{}B_d:

\begin{equation}
\angle{}B_d = \angle{}B_r \times \frac{180\degree}{\pi}
\end{equation}

Дело остаётся за малым. Вычисляем площадь и периметр \Delta{}ABC:

\begin{equation}
S = \frac{ab \sin{\angle{}C}}{2}
\end{equation}

\begin{equation}
P = a + b + c
\end{equation}

Выводим полученные данные.

*** Работа программы

При вводе \(a = 10\), \(b = 20\) и \(\angle{}C = 45\degree\) получаем:

[[./img/Z1_1.png]]

TODO: посчитать руками.
